<template>
  <div class="container">
    <div class="sidebar">
      <h2>课程概要</h2>
      <ul>
        <li v-for="lesson in lessons" :key="lesson.id">
          <a :href="'#lesson-' + lesson.id">{{ lesson.name }}</a>
          <button @click="editLesson(lesson)">编辑</button>
          <button @click="deleteLesson(lesson)">删除</button>
        </li>
        <li>
          <button @click="addLesson">添加课时</button>
        </li>
      </ul>
    </div>
    <div class="main-content">
      <h1>{{ course.title }}</h1>
      <p>{{ course.description }}</p>
      <div v-for="lesson in lessons" :key="lesson.id" :id="'lesson-' + lesson.id">
        <h2>{{ lesson.name }}</h2>
        <p>{{ lesson.content }}</p>
        <video :src="lesson.video_url" controls></video>
      </div>
    </div>
    <div class="modal" v-if="showModal">
      <div class="modal-content">
        <h2>添加课时</h2>
        <form @submit.prevent="submitLesson">
          <div class="form-group">
            <label for="lessonName">课时名称：</label>
            <input type="text" id="lessonName" v-model="lessonName" />
          </div>
          <button type="submit">添加</button>
          <button type="button" @click="closeModal">取消</button>
        </form>
      </div>
    </div>
  </div>
</template>

<script>
import config from "../config.js";
import axios from "axios";

export default {
  name: "CourseDetail",
  data() {
    return {
      course: {},
      lessons: [],
    };
  },
  async created() {
    await this.fetchCourse();
    await this.fetchLessons();
  },
  methods: {
    // 获取课程信息
    async fetchCourse() {
      try {
        const response = await fetch(
          config.apiHost + "/courses/" + this.$route.params.id
        );
        const data = await response.json();
        this.course = data;
      } catch (error) {
        console.error(error);
      }
    },
    // 获取课程中包括的课时
    async fetchLessons() {
      try {
        const response = await fetch(
          config.apiHost + "/courses/" + this.$route.params.id + "/lessons"
        );
        const data = await response.json();
        this.lessons = data;
      } catch (error) {
        console.error(error);
      }
    },
    //添加课时
    async addLesson() {
      const name = prompt("请输入课时名称");
      if (name) {
        const data = {
          course_id: this.course.id,
          name: name,
        };
        try {
          const token = localStorage.getItem("token");
          await axios.post(config.apiHost + "/lessons/", data, {
            headers: {
              Authorization: `${token}`,
            },
          });
          this.fetchLessons();
        } catch (error) {
          console.error(error);
        }
      }
    },
    // 删除课时
    async deleteLesson(id) {
      try {
        const token = localStorage.getItem("token");
        await axios.delete(config.apiHost + "/lessons/" + id, {
          headers: {
            Authorization: `${token}`,
          },
        });
        this.fetchLessons();
      } catch (error) {
        console.error(error);
      }
    },
    // 编辑课时
    async editLesson(id, name) {
      const newName = prompt("请输入新的课时名称", name);
      if (newName) {
        const data = {
          name: newName,
        };
        try {
          const token = localStorage.getItem("token");
          await axios.patch(config.apiHost + "/lessons/" + id, data, {
            headers: {
              Authorization: `${token}`,
            },
          });
          this.fetchLessons();
        } catch (error) {
          console.error(error);
        }
      }
    },
  },
};
</script>

<style>
.container {
  display: flex;
  justify-content: center;
  margin-top: 50px;
}

.sidebar {
  flex-basis: 30%;
  margin-right: 50px;
}

.sidebar h2 {
  font-size: 24px;
  font-weight: bold;
}

.sidebar ul {
  margin-top: 20px;
  padding-left: 0;
  list-style: none;
}

.sidebar li {
  margin-top: 10px;
  font-size: 18px;
  cursor: pointer;
  color: #3a8ee6;
}

.sidebar li a {
  color: #3a8ee6;
  text-decoration: none;
}

.sidebar li:first-child {
  font-weight: bold;
}

.main-content {
  flex-basis: 70%;
}

.main-content h1 {
  font-size: 36px;
  font-weight: bold;
  margin-bottom: 20px;
}

.main-content p {
  font-size: 18px;
  line-height: 1.6;
  margin-bottom: 40px;
}

.main-content h2 {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 20px;
}

.main-content video {
  margin-top: 20px;
  width: 100%;
}
</style>
